name: Publish notesnook-server-admin

on: release

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Docker setup buildx
        uses: docker/setup-buildx-action@v3
#        with:
#          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          ecr: auto
          logout: true

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          tags: |
            type=schedule,suffix=-${{ inputs.directory }}
            type=ref,event=tag,suffix=-${{ inputs.directory }}
            type=ref,event=pr,prefix=pr-,suffix=-${{ inputs.directory }}
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME2 }}
            
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        if: github.event_name != 'pull_request' # TODO
        with:
          context: ${{ inputs.directory }}
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.retrieve-tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs and private repos
      # The keyless signing process records signatures on the Rekor public
      # transparency log, so signing is disabled for private repos by default
      # to avoid leaking private data.  If you wish to sign things anyways,
      # then this check can be removed and --force can be added to the cosign
      # command below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && !github.event.repository.private }}
        env:
          REGISTRY1: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
          REGISTRY2: ${{ env.REGISTRY2 }}/${{ env.IMAGE_NAME2 }}@${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance, and records it to the
        # sigstore community Rekor transparency log.
        run: cosign sign --yes ${REGISTRY1} ${REGISTRY2}